1. создали приложение на сайте https://start.spring.io/ добавили зависимость СПРИНГ ШЕЛ

** СТАРТЕР СПРИНГ БУТ ШЕЛ

2. открыли в иде скачаный архив, в нем есть Демо Апликацион с аннотацией @SpringBootApplication - она комбинированная и состоит из множества других аннотаций
благодаря этой аннотации СПРИНГ БУТ настроит приложение
3. приложение: СИМУЛЯЦИЯ ПАРКОВОЧНОЙ ПЛОЩАДКИ
4. Создали класс ParkingShel, пометим его аннотацией @ShellComponent (производная от КОМПОНЕНТ) - классы будут регистрироваться в контексте СПРИНГ , так же внутри классов помеченных этой аннотацией
мы можем создавать методы которые  можем вызывать из консоли
5. создадим парковочную площадку (обычная МАПА)
6. создали  public String init() и пометили аннотацией     @ShellMethod (его можнго вызвать теперь из консоли).
 - в классе public class ParkingShel {} мы можем создавать специальные методы, которые можно будет вызывать из консоли
- после запуска проги, можно вывести метод из консоли
- для метода можем сделать ключ вызова : i 10 20 30 , для этого нужно указать КЕЙ у аннотации шелМетод     @ShellMethod(key = "i")
- можем указать ключ для свойств i --big 10 --medium 20 --small 30 и получим результат
- делаем вызов: i --b 10 --m 20 --s 30   с помощь :
public String init(@ShellOption(value = "b") int big,
                       @ShellOption(value = "m") int medium,
                       @ShellOption(value = "s") int small){}
7. метод реализует парковку машин:public  String addCar(int carType) {}
8. сделаем так чтобы нельзя было вызывать метод от КАР если на парковке вообще нет места  public Availability canAddCar(){}.
  // (Availability -объект, с пом-ю которого Спринг шел понимает может ли быть вызван метод или он не доступен для вызова)
        //для того чтобы этот метод проверялся мы используем аннотацию     @ShellMethodAvailability("canAddCar") перед методом addCar(int carType)

2.2 Конфигурация в Spring Boot
приложение может запускаться на разных стендах и иметь разные настройки (на 1 из стендов можем считывать значение из очереди и обрабатывать их, тогда как на 2 стенде такой возможности нет ) )
-ДЛЯ ОБРАБОТКИ СОБЫТИЙ МЫ РЕАЛИЗУЕМ БИНЫ, КОТОРЫЕ БУДУТ ВЫПОЛНЯТЬ ЭТУ РАБОТУ. дЛЯ ТОГО ЧТОБЫ БИНЫ ЗАПУСКАЛИСЬ ТОЛЬКО В КОНКРЕТНОМ СЛУЧАЕ (НАСТРОЙКИ В ПРОФИЛЕ ПРИЛОЖЕНИЯ)
1. Conditial :
ConditionalOnClass: ПОДКЛЮЧАЕТ БИН ЕСЛИ В КЛАСС ПАССЕ БУДЕТ ИМЕТСЯ КЛАСС, КОТОРЫЙ БЫЛ ПЕРЕДАН В ЭТУ АННОТАЦИЮ
• ConditionalOnBean: ЭТА АННОТАЦИЯ АКТИВИРУЕТСЯ ЕСЛИ В КОНТЕКСТЕ ПРИЛОЖЕНИЯ ЕСТЬ БИН КОТОРЫЙ МЫ УКАЗАЛИ В ЭТОЙ АННОТАЦИИ
• ConditionalOnProperty: АКТИВИРУЕТСЯ ЕСЛИ НЕКОТОРОЕ СВОЙСТВО КОТОРОЕ МЫ УКАЗАЛИ В ЭТОЙ АННОТ-ИИ ИМЕЕТ ОПРЕДЕЛЕННОЕ ЗНАЧЕНИЕ
• ConditionalOnMissingBean: АКТИВ-СЯ ЕСЛИ ОПРЕДЕЛЕННЫЙ БИН В КОНТЕКСТЕ ПРИЛОЖЕНИЯ ОТСУСТВ.
• ConditionalOnExpression: АКТИВИРУЕТСЯ ЕСЛИ СПЕЛЛ-ВЫРОЖЕНИЕ , КОТОРОЕ МЫ ПЕРЕДАЛИ В НЕЕ ВЫЧЕСЛЯЕТСЯ КАК ИСТИННАЯ

2. СОЗДАДИМ ПРИЛОЖЕНИЕ НА САЙТЕ
